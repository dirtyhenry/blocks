{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateString"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"DateString"},{"type":"text","text":" is a way to handle dates with no time â€” such as "},{"type":"codeVoice","code":"2022-03-02"},{"type":"text","text":" for March 2nd of 2022 â€” to"},{"type":"text","text":" "},{"type":"text","text":"perform operations with convenience including adding days, dealing with ranges, etc."}]},{"anchor":"Usage-Overview","level":2,"type":"heading","text":"Usage Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A date string can be initiated from a string literal, and can be used to create ranges."}]},{"type":"codeListing","syntax":"swift","code":["let dateString: DateString = \"2022-03-01\"","let aWeekLater = dateString.advanced(by: 7)","for day in march1st ..< aWeekLater {","  print(day)","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/blocks\/datestring"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Blocks\/SL","doc:\/\/Blocks\/s28CustomDebugStringConvertibleP","doc:\/\/Blocks\/s23CustomStringConvertibleP","doc:\/\/Blocks\/SQ","doc:\/\/Blocks\/s43ExpressibleByExtendedGraphemeClusterLiteralP","doc:\/\/Blocks\/s26ExpressibleByStringLiteralP","doc:\/\/Blocks\/s33ExpressibleByUnicodeScalarLiteralP","doc:\/\/Blocks\/Sx"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Blocks\/documentation\/Blocks\/DateString","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A string that represents dates using their ISO 8601 representations."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateString"}],"title":"DateString","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:6Blocks10DateStringV","modules":[{"name":"Blocks"}],"navigatorTitle":[{"kind":"identifier","text":"DateString"}]},"hierarchy":{"paths":[["doc:\/\/Blocks\/documentation\/Blocks"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Blocks\/documentation\/Blocks\/DateString\/init(date:calendar:)","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/init(from:calendar:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/Blocks\/documentation\/Blocks\/DateString\/string(with:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/Blocks\/documentation\/Blocks\/DateString\/-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Comparable-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/CustomDebugStringConvertible-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/CustomStringConvertible-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Equatable-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByStringLiteral-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByUnicodeScalarLiteral-Implementations","doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Strideable-Implementations"],"generated":true}],"references":{"doc://Blocks/documentation/Blocks/DateString/init(date:calendar:)":{"role":"symbol","title":"init(date:calendar:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"date"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Date","preciseIdentifier":"s:10Foundation4DateV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"calendar"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Calendar","preciseIdentifier":"s:10Foundation8CalendarV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns a date string initialized using their ISO 8601 representation."}],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/init(date:calendar:)","kind":"symbol","type":"topic","url":"\/documentation\/blocks\/datestring\/init(date:calendar:)"},"doc://Blocks/documentation/Blocks/DateString/init(from:calendar:)":{"role":"symbol","title":"init(from:calendar:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"calendar"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Calendar","preciseIdentifier":"s:10Foundation8CalendarV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns a date string initialized using their ISO 8601 representation."}],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/init(from:calendar:)","kind":"symbol","type":"topic","url":"\/documentation\/blocks\/datestring\/init(from:calendar:)"},"doc://Blocks/documentation/Blocks/DateString/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/customstringconvertible-implementations"},"doc://Blocks/documentation/Blocks/DateString/ExpressibleByUnicodeScalarLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByUnicodeScalarLiteral Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByUnicodeScalarLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/expressiblebyunicodescalarliteral-implementations"},"doc://Blocks/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/Blocks\/s28CustomDebugStringConvertibleP"},"doc://Blocks/documentation/Blocks/DateString/string(with:)":{"role":"symbol","title":"string(with:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DateFormatter","preciseIdentifier":"c:objc(cs)NSDateFormatter"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Returns a string representation of the date that the system formats using the receiverâ€™s current settings."}],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/string(with:)","kind":"symbol","type":"topic","url":"\/documentation\/blocks\/datestring\/string(with:)"},"doc://Blocks/documentation/Blocks/DateString/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/customdebugstringconvertible-implementations"},"doc://Blocks/s26ExpressibleByStringLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByStringLiteral","identifier":"doc:\/\/Blocks\/s26ExpressibleByStringLiteralP"},"doc://Blocks/documentation/Blocks":{"role":"collection","title":"Blocks","abstract":[{"type":"text","text":"ðŸ§± Some building blocks for my Swift adventures."}],"identifier":"doc:\/\/Blocks\/documentation\/Blocks","kind":"symbol","type":"topic","url":"\/documentation\/blocks"},"doc://Blocks/documentation/Blocks/DateString/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Comparable-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/comparable-implementations"},"doc://Blocks/s43ExpressibleByExtendedGraphemeClusterLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByExtendedGraphemeClusterLiteral","identifier":"doc:\/\/Blocks\/s43ExpressibleByExtendedGraphemeClusterLiteralP"},"doc://Blocks/documentation/Blocks/DateString/ExpressibleByStringLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByStringLiteral Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByStringLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/expressiblebystringliteral-implementations"},"doc://Blocks/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Blocks\/SQ"},"doc://Blocks/documentation/Blocks/DateString":{"role":"symbol","title":"DateString","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DateString"}],"abstract":[{"type":"text","text":"A string that represents dates using their ISO 8601 representations."}],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DateString"}],"url":"\/documentation\/blocks\/datestring"},"doc://Blocks/Sx":{"type":"unresolvable","title":"Swift.Strideable","identifier":"doc:\/\/Blocks\/Sx"},"doc://Blocks/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/Blocks\/s23CustomStringConvertibleP"},"doc://Blocks/s33ExpressibleByUnicodeScalarLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByUnicodeScalarLiteral","identifier":"doc:\/\/Blocks\/s33ExpressibleByUnicodeScalarLiteralP"},"doc://Blocks/documentation/Blocks/DateString/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/equatable-implementations"},"doc://Blocks/documentation/Blocks/DateString/ExpressibleByExtendedGraphemeClusterLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/expressiblebyextendedgraphemeclusterliteral-implementations"},"doc://Blocks/SL":{"type":"unresolvable","title":"Swift.Comparable","identifier":"doc:\/\/Blocks\/SL"},"doc://Blocks/documentation/Blocks/DateString/-Implementations":{"role":"collectionGroup","title":" Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/-implementations"},"doc://Blocks/documentation/Blocks/DateString/Strideable-Implementations":{"role":"collectionGroup","title":"Strideable Implementations","abstract":[],"identifier":"doc:\/\/Blocks\/documentation\/Blocks\/DateString\/Strideable-Implementations","kind":"article","type":"topic","url":"\/documentation\/blocks\/datestring\/strideable-implementations"}}}